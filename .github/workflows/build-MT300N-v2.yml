#=================================================
# https://github.com/Tony268/APPS
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: Tony
# Blog: https://bit.do/TonyLee
#=================================================
#name: OpenWRT for GL-MT300N-v2-8M
name: OpenWRT for GL-MT300N-v2-16M
#name: OpenWrt WR703N OpenVPN SSR
#name: OpenWRT for WA801N-v2-16M


on: 
  release:
    types: [published]
  push:
    branches: 
      - master
    paths:
      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: [started]
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "Deleting files, please wait ..."
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d/*
        sudo swapoff /swapfile
        sudo rm -f /swapfile
        #docker rmi `docker images -q`
        #sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        curl -fsSL https://raw.githubusercontent.com/ccsfedu/dotfiles/master/.bashrc >> ~/.bashrc
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
    - name: Clone source code 复制仓库的源代码
      env: 
       ## REPO_URL: https://github.com/coolsnowwolf/lede
       ## REPO_URL: https://github.com/openwrt/openwrt
       ## REPO_URL: https://github.com/openwrt/openwrt
       ##  REPO_URL: https://github.com/a520ass/openwrt
         REPO_URL: https://github.com/coolsnowwolf/lede
         REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update feeds 更新源
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds 安装源
      run: cd openwrt && ./scripts/feeds install -a

    - name: Custom 个性化设置一些文件
      run: |
          cd openwrt
          ## sed -i 's/被替换的内容/要替换成的内容/' package/lean/default-settings/files/zzz-default-setting
          sed -i 's/0x7b0000/0xfb0000/g' target\/linux\/ramips\/dts\/mt7620a_phicomm_psg1218.dtsi    
          sed -i 's/7872k/16064k/g' target\/linux\/ramips\/image\/mt7620.mk 
          sed -i '/tl-wa801nd-v2/{n;s/tplink-8mlzma/tplink-16mlzma/;}'  target\/linux\/ar71xx\/image\/tiny-tp-link.mk        
          sed -i 's/R20.2.15/Plus by Tony 2020/' package\/lean\/default-settings\/files\/zzz-default-settings
          sed -i 's/192.168.1.1/192.168.2.1/' package\/base-files\/files\/bin\/config_generate
          sed -i 's/pcdata(ver.luciname)/"Linksys路由神器"/' feeds\/luci\/modules\/luci-mod-admin-full\/luasrc\/view\/admin_status\/index.htm
          sed -i 's/pcdata(ver.luciversion)/"2020-02-22"/' feeds\/luci\/modules\/luci-mod-admin-full\/luasrc\/view\/admin_status\/index.htm
          sed -i 's/OpenWrt/GL-MT300N/' package\/base-files\/files\/bin\/config_generate
          sed -i 's/.ssid=OpenWrt/.ssid=GL-MT300N-WiFi/' package\/kernel\/mac80211\/files\/lib\/wifi\/mac80211.sh
          sed -i 's/.encryption=none/.encryption=psk2\n	    		set wireless.default_radio\${devidx}.key=password\n/' package\/kernel\/mac80211\/files\/lib\/wifi\/mac80211.sh
      
    - name: Custom Applications 增加应用软件
      run: |
          cd openwrt/package
          git clone https://github.com/Baozisoftware/luci-app-koolproxy
          git clone https://github.com/vernesong/OpenClash.git
          git clone https://github.com/destan19/OpenAppFilter.git
          git clone https://github.com/tty228/luci-app-serverchan.git
          git clone https://github.com/BoringCat/luci-app-mentohust.git
          #git clone https://github.com/ilya-fedin/pihole-openwrt.git
          
    - name: Load custom configuration 加载自定义编译配置文件
      env:
       # CONFIG_FILE:  '.img/GL-MT300N-v2-16M-config'
       # CONFIG_FILE:  '.img/GL-MT300N-v2-16Mconfig'
        CONFIG_FILE: '.config'
       # CONFIG_FILE: 'OpenWRT-N1.config'  
       # CONFIG_FILE: '.config'   
       # CONFIG_FILE: '.img/n1config' 
       # CONFIG_FILE: '.img/WA801N-v2-8Mconfig'
       # CONFIG_FILE: '.img/WA801N-v2-8Mconfig'
        DIY_SH: '.img/diy.sh'
      run: |
        [ -e .img/files ] && mv .img/files openwrt/files
        #rm -rf openwrt/files/www/luci-static/resources/pictures
        rm -rf openwrt/files/etc/fcn
        rm -rf openwrt/files/etc/luci-theme-argon_1.0-2_all.ipk
        rm -rf openwrt/files/etc/uboot.bin
        rm -rf openwrt/files/opt/fcn
        rm -rf openwrt/files/overlay/default.tar.gz
        mv openwrt/files/etc/config/network openwrt/files/etc/config/networGL-MT300N-v2
        mv openwrt/files/etc/config/wireless openwrt/files/etc/config/wireless2
        
        #cp -f .img/breed-wa801n.bin openwrt/files/etc/uboot.bin
        cp -f .img/lucifiles/feeds/luci/modules/luci-mod-admin-full/luasrc/controller/admin/{system.lua,tony.lua} openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/controller/admin/
        cp -f .img/lucifiles/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_system/{flashops.htm,reboot.htm} openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_system/
        cp -f -r .img/lucifiles/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_tony_view/  openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_tony_view/
        cp -f -r .img/lucifiles/feeds/luci/modules/luci-mod-admin-full/luasrc/model/cbi/admin_tony/  openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/model/cbi/admin_tony/
        cp -f .img/lucifiles/feeds/luci/themes/luci-theme-bootstrap/luasrc/view/themes/bootstrap/{footer.htm,header.htm}  openwrt/feeds/luci/themes/luci-theme-bootstrap/luasrc/view/themes/bootstrap/
        cp -f .img/lucifiles/package/lean/luci-app-ssr-plus/luasrc/view/shadowsocksr/{ssrurl.htm,status.htm,refresh.htm,check.htm}  openwrt/package/lean/luci-app-ssr-plus/luasrc/view/shadowsocksr/
        cp -f .img/lucifiles/target/linux/ar71xx/files/drivers/mtd/tplinkpart.c  openwrt/target/linux/ar71xx/files/drivers/mtd/tplinkpart.c
        cp -f .img/lucifiles/feeds/luci/modules/luci-base/luasrc/model/firewall.lua  openwrt/feeds/luci/modules/luci-base/luasrc/model/firewall.lua
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        make defconfig
        
      ##cp -f .img/lucifiles/target/linux/ar71xx/image/{tiny-tp-link.mk,generic-tp-link.mk}  openwrt/target/linux/ar71xx/image/
      ##cp -f .img/lucifiles/package/lean/luci-theme-argon/htdocs/luci-static/argon/{tony.gif,logo.png,favicon.ico}  openwrt/package/lean/luci-theme-argon/htdocs/luci-static/argon/
  
      #  cp -f uboot/wr703n-uboot.bin openwrt/files/etc/uboot.bin
      #  cp -f uboot/wr941v1v2v3v4v5-uboot.bin openwrt/files/etc/uboot.bin
      #  cp -f uboot/wr941v1v2v3v4v5-uboot.bin openwrt/files/etc/uboot.bin
      #  cp -f uboot/wr941v1v2v3v4v5-uboot.bin openwrt/files/etc/uboot.bin

#======================================================================
      # - name: SSH connection to Actions
      #   uses: Tony268/debugger-action@master
#======================================================================
    - name: SSH connection to Actions 用SSH连接到终端控制台
      uses: Tony268/debugger-action@master
#======================================================================

    - name: Download package 下载软件包
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Multi-thread compile 多线程编译
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc)
    - name: Single-thread compile 单线程编译
      if: failure()
      run: |
        cd openwrt
        make -j1 V=s
    - name: Upload bin directory 上传固件相关软件包
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: GL-MT300N-v2-16M_packages
        path: openwrt/bin

    - name: Upload .config file 组织要上传.config配置文件
      run: |
           mkdir -p openwrt/artifact
           cp openwrt/.config openwrt/artifact/GL-MT300N-v2-16Mconfig
           ##cp openwrt/.config openwrt/artifact/WA801N-v2-8Mconfig
           
    - name: Upload .config file 上传编译配置文件
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: GL-MT300N-v2-16Mconfig
        path: openwrt/artifact

    - name: Organize files 组织要上传的文件
      if: always()
      run: |  
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$(pwd)"
    
    - name: Upload firmware 上传固件文件
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: GL-MT300N-v2-16M_firmware
        path: ${{ env.FIRMWARE }}
